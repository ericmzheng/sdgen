version: 2.1
jobs:
  test-python:
    docker:
      - image: cimg/python:3.10-node
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            pip3 install -r requirements.txt --break-system-packages
      - run:
          name: Install sdgen
          command: |
            pip3 install . --break-system-packages
      - run:
          name: Run tests
          command: pytest tests/ --junitxml=junit.xml || ((($? == 5)) && echo 'Did not find any tests to run.')
      - store_test_results:
          path: junit.xml
  test-cpp-gen:
    docker:
      - image: gcc:13
    steps:
      - checkout
      - run:
          name: Install Python and pip
          command: |
            apt-get update && apt-get install -y python3 python3-pip
      - run:
          name: Install dependencies
          command: |
            pip3 install -r requirements.txt --break-system-packages
      - run:
          name: Install sdgen
          command: |
            pip3 install . --break-system-packages
      - run:
          name: Install C++ dependencies
          command: |
            apt-get update && apt-get install -y libyaml-cpp-dev nlohmann-json3-dev librapidxml-dev
      - run:
          name: Run C++ codegen and serialization tests with pytest
          command: |
            pytest tests-cpp-gen/ --junitxml=junit-cpp.xml || ((($? == 5)) && echo 'Did not find any tests to run.')
      - store_test_results:
          path: junit-cpp.xml
  test-rs-gen:
    docker:
      - image: rust:1.77
    steps:
      - checkout
      - run:
          name: Install Python and pip
          command: |
            apt-get update && apt-get install -y python3 python3-pip
      - run:
          name: Install dependencies
          command: |
            pip3 install -r requirements.txt --break-system-packages
      - run:
          name: Install sdgen
          command: |
            pip3 install . --break-system-packages
      - run:
          name: Install Rust dependencies
          command: |
            rustup component add rustfmt
            cargo install cargo-edit || true
      - run:
          name: Run Rust codegen and serialization tests with pytest
          command: |
            pytest tests-rs-gen/ --junitxml=junit-rs.xml || ((($? == 5)) && echo 'Did not find any tests to run.')
      - store_test_results:
          path: junit-rs.xml
  test-java-gen:
    docker:
      - image: cimg/openjdk:21.0-node
    steps:
      - checkout
      - run:
          name: Install Python and pip
          command: |
            sudo apt-get update && sudo apt-get install -y python3 python3-pip
      - run:
          name: Install dependencies
          command: |
            pip3 install -r requirements.txt
      - run:
          name: Install sdgen
          command: |
            pip3 install .
      - run:
          name: Install Maven
          command: sudo apt-get update && sudo apt-get install -y maven || true
      - run:
          name: Download Java dependencies with Maven
          command: mvn -f tests-java-gen/pom.xml dependency:copy-dependencies
      - run:
          name: Run Java codegen tests
          command: pytest tests-java-gen/ --junitxml=junit-java.xml || ((($? == 5)) && echo 'Did not find any tests to run.')
      - store_test_results:
          path: junit-java.xml
  test-go-gen:
    docker:
      - image: cimg/go:1.22
    steps:
      - checkout
      - run:
          name: Install Python and pip
          command: |
            sudo apt-get update && sudo apt-get install -y python3 python3-pip
      - run:
          name: Install dependencies
          command: |
            pip3 install -r requirements.txt
      - run:
          name: Install sdgen
          command: |
            pip3 install .
      - run:
          name: Run Go adapter tests
          command: pytest tests-go-gen/ --junitxml=junit-go.xml || ((($? == 5)) && echo 'Did not find any tests to run.')
      - store_test_results:
          path: junit-go.xml
  test-cs-gen:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:8.0
    steps:
      - checkout
      - run:
          name: Install Python and pip
          command: |
            apt-get update && apt-get install -y python3 python3-pip
      - run:
          name: Install dependencies
          command: |
            pip3 install -r requirements.txt --break-system-packages
      - run:
          name: Install sdgen
          command: |
            pip3 install . --break-system-packages
      - run:
          name: Run C# adapter tests
          command: pytest tests-cs-gen/ --junitxml=junit-cs.xml || ((($? == 5)) && echo 'Did not find any tests to run.')
      - store_test_results:
          path: junit-cs.xml
  test-swift-gen:
    macos:
      xcode: 15.3.0
    steps:
      - checkout
      - run:
          name: Install Python and pip
          command: |
            brew install python@3.10 || true
            python3 -m pip install --upgrade pip
      - run:
          name: Install dependencies
          command: |
            pip3 install -r requirements.txt
      - run:
          name: Install sdgen
          command: |
            pip3 install .
      - run:
          name: Install SwiftPM dependencies for XMLCoder and Yams
          command: |
            cd tests-swift-gen || exit 0
            if [ -f Package.swift ]; then
              swift package resolve
            fi
      - run:
          name: Run Swift adapter tests
          command: pytest tests-swift-gen/ --junitxml=junit-swift.xml || ((($? == 5)) && echo 'Did not find any tests to run.')
      - store_test_results:
          path: junit-swift.xml
workflows:
  build-and-test:
    jobs:
      - test-python
      - test-cpp-gen
      - test-rs-gen
      - test-java-gen
      - test-go-gen
      - test-cs-gen
      - test-swift-gen
